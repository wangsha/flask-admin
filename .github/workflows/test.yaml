name: Run tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        tox-version: [ 'WTForms2' ]
        include:
          - python-version: 3.11
            tox-version: flake8
          - python-version: 3.11
            tox-version: docs-html
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis:12-master # postgres with postgis installed
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flask_admin_test
        ports:
          - 5432:5432
          # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongo:
        image: mongo:5.0.14-focal
        ports:
          - 27017:27017
      azurite:
        image: arafato/azurite:2.6.5
        env:
          executable: blob
        ports:
          - 10000:10000
    steps:
      - name: Install Ubuntu packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libgeos-c1v5
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up PostgreSQL hstore module
        env:
          PGPASSWORD: postgres
        run: psql -U postgres -h localhost -c 'CREATE EXTENSION hstore;' flask_admin_test
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: pip install tox
      - name: Run tests
        run: tox -e ${{ matrix.tox-version }}
